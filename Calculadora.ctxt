#BlueJ class context
comment0.params=
comment0.target=void\ multiplesOfFive()
comment0.text=\r\n\ \ imprima\ todos\ los\ m\u00FAltiplos\ de\ 5\ entre\ 10\ y\ 95\ (ambos\ extremos\ no\ incluidos)\ \r\n
comment1.params=
comment1.target=void\ sumValues()
comment1.text=\r\n\ saque\ por\ pantalla\ la\ suma\ de\ los\ n\u00FAmeros\ comprendidos\ entre\ el\ 0\ y\ el\ 10\ (ambos\ incluidos)\ haciendo\ uso\ de\ \r\n\ un\ bucle\ while\ \r\n
comment2.params=num1\ num2
comment2.target=int\ sumValuesInterval(int,\ int)
comment2.text=\r\n\ \ que\ reciba\ dos\ par\u00E1metros\ enteros\ a\ y\ b\ y\ devuelva\ la\ suma\ de\ los\ valores\ comprendidos\ entre\ dichos\ \r\n\ \ par\u00E1metros\ (ambos\ incluidos)\ \r\n
comment3.params=n
comment3.target=boolean\ isPrime(int)
comment3.text=\r\n\ que\ devuelva\ verdadero\ si\ el\ par\u00E1metro\ n\ es\ primo\ o\ falso\ en\ caso\ contrario\r\n\ Debes\ usar\ un\ bucle\ while\ que\ divida\ el\ n\u00FAmero\ entre\ todos\ los\ valores\ comprendidos\ entre\ 2\ y\ (n\ -1).\ Si\ alguna\ \r\n\ de\ estas\ divisiones\ da\ de\ resto\ 0,\ entonces\ el\ n\u00FAmero\ no\ es\ primo.\ Se\ debe\ comprobar\ que\ el\ par\u00E1metro\ es\ mayor\ que\ 1;\r\n\ en\ caso\ contrario\ se\ informa\ por\ pantalla\ del\ error\ y\ se\ devuelve\ false\r\n
comment4.params=n1\ n2
comment4.target=int\ productoConSumas(int,\ int)
comment4.text=\r\n\ realizar\ multiplicaciones\ entre\ enteros\ positivos.\ Debes\ decidir\ por\ ti\ mismo\ qu\u00E9\ par\u00E1metros\ debe\ recibir\ \r\n\ dicho\ m\u00E9todo.\ El\ m\u00E9todo\ devuelve\ un\ valor\ de\ tipo\ entero.\ Se\ pone\ como\ condici\u00F3n\ que\ para\ realizarlo\ solo\r\n\ se\ pueden\ emplear\ las\ operaciones\ matem\u00E1ticas\ suma\ y\ resta,\ no\ estando\ permitido\ usar\ ninguna\ otra\ \r\n\ operaci\u00F3n\ matem\u00E1tica.\ Si\ los\ par\u00E1metros\ no\ son\ enteros\ positivos\ el\ m\u00E9todo\ deben\ devolver\ -1\ e\ informar\r\n\ por\ pantalla\ del\ error.\ \r\n
numComments=5
