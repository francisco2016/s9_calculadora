#BlueJ class context
comment0.params=
comment0.target=Calculadora()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Calculadora\r\n
comment1.params=
comment1.target=void\ multiplesOfFive()
comment1.text=\r\n\ \ imprima\ todos\ los\ m\u00FAltiplos\ de\ 5\ entre\ 10\ y\ 95\ (ambos\ extremos\ no\ incluidos)\ \r\n
comment2.params=
comment2.target=void\ sumValues()
comment2.text=\r\n\ saque\ por\ pantalla\ la\ suma\ de\ los\ n\u00FAmeros\ comprendidos\ entre\ el\ 0\ y\ el\ 10\ (ambos\ incluidos)\ haciendo\ uso\ de\ \r\n\ un\ bucle\ while\ \r\n
comment3.params=num1\ num2
comment3.target=int\ sumValuesInterval(int,\ int)
comment3.text=\r\n\ \ que\ reciba\ dos\ par\u00E1metros\ enteros\ a\ y\ b\ y\ devuelva\ la\ suma\ de\ los\ valores\ comprendidos\ entre\ dichos\ \r\n\ \ par\u00E1metros\ (ambos\ incluidos)\ \r\n
comment4.params=n
comment4.target=boolean\ isPrime(int)
comment4.text=\r\n\ que\ devuelva\ verdadero\ si\ el\ par\u00E1metro\ n\ es\ primo\ o\ falso\ en\ caso\ contrario\r\n\ Debes\ usar\ un\ bucle\ while\ que\ divida\ el\ n\u00FAmero\ entre\ todos\ los\ valores\ comprendidos\ entre\ 2\ y\ (n\ -1).\ Si\ alguna\ \r\n\ de\ estas\ divisiones\ da\ de\ resto\ 0,\ entonces\ el\ n\u00FAmero\ no\ es\ primo.\ Se\ debe\ comprobar\ que\ el\ par\u00E1metro\ es\ mayor\ que\ 1;\r\n\ en\ caso\ contrario\ se\ informa\ por\ pantalla\ del\ error\ y\ se\ devuelve\ false\r\n
numComments=5
